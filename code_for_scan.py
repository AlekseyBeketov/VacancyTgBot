#!/bot
# -*- coding: UTF-8 -*-
import telebot
import schedule
import time
import sqlite3

from telebot import types
from datetime import datetime, timedelta

bot = telebot.TeleBot('test')

admin_id = 964423991


@bot.message_handler(commands=['employka'])
def startDbEmployee():
    conn = sqlite3.connect('bot_db.sql')
    cur = conn.cursor()
    cur.execute('create table if not exists users (id int primary key, name varchar(30), area_1 int, area_2 int, area_3 int, '
                'area_4 int, area_5 int, area_6 int, area_7 int, area_8 int, zanatost int, dlitelnost int)')
    cur.execute('create table if not exists workers (id int auto_increment primary key, id_emp int, name varchar(30), area_1 int, area_2 int, area_3 int, area_4 int, area_5 int, '
                'area_6 int, area_7 int, area_8 int, zanatost int, dlitelnost int,text varchar(5000), contacts varchar(500),date_of_create datetime)')
    conn.commit()
    cur.close()
    conn.close()

@bot.message_handler(commands=['asd'])
def gg():
    conn = sqlite3.connect('bot_db.sql')
    cur = conn.cursor()
    cur.execute('delete from workers')
    conn.commit()
    cur.close()
    conn.close()
# –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã start
@bot.message_handler(commands=['start'])
def main(message):
    global adm_id
    adm_id = 964423991
    global area_buttons
    area_buttons = {
        "‚ùå –í–µ–±-–¥–∏–∑–∞–π–Ω –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": "‚ùå –í–µ–±-–¥–∏–∑–∞–π–Ω –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
        "‚ùå –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥": "‚ùå –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥",
        "‚ùå –¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥": "‚ùå –¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥",
        "‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∞–π—Ç–æ–≤": "‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∞–π—Ç–æ–≤",
        "‚ùå –í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂ –∏ –∞–Ω–∏–º–∞—Ü–∏—è": "‚ùå –í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂ –∏ –∞–Ω–∏–º–∞—Ü–∏—è",
        "‚ùå –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω": "‚ùå –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω",
        "‚ùå –ü–µ—Ä–µ–≤–æ–¥—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è": "‚ùå –ü–µ—Ä–µ–≤–æ–¥—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è",
        "‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π": "‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    }
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–Ø –∏—â—É —Ä–∞–±–æ—Ç—É')
    btn2 = types.KeyboardButton('–Ø ‚Äî —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å')
    if (message.from_user.id==adm_id):
        btn3 = types.KeyboardButton('–Ø ‚Äî –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
        markup.row(btn1,btn2,btn3)
    else:
        markup.row(btn1, btn2)
    sent_message = bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–°–∫–∞–∂–∏, –∫–∞–∫ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞?', reply_markup=markup)
    bot.register_next_step_handler(sent_message, on_click)

def on_click(message):
    global emp
    if message.text == '–Ø –∏—â—É —Ä–∞–±–æ—Ç—É':
        emp=0
        conn = sqlite3.connect('bot_db.sql')
        cur = conn.cursor()
        cur.execute("SELECT * FROM user_ads")
        cur.close()
        conn.close()
        employee_name(message)
    elif message.text == '–Ø ‚Äî —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å':
        emp=1
        employee_name(message)
    elif message.text == '–Ø ‚Äî –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' and message.chat.id==admin_id:
        emp=2
        bot.send_message(message.chat.id, f'–ù—É —á–µ, {message.from_user.first_name}, –ø–æ–≥–Ω–∞–ª–∏! \n\n–í–≤–µ–¥–∏—Ç–µ Id —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è')
        bot.register_next_step_handler(message, employee_name)

def insert_emp_id(message):

    employee_name(message)


def employee_name(message):
    markup = types.ReplyKeyboardRemove(selective=False)
    if emp==0:
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É üìù', reply_markup=markup)
        bot.send_message(message.chat.id, '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ–±—ã —è –º–æ–≥ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è üôÇ')
    if emp==1:
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –í–∞—à–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è üìù', reply_markup=markup)
        bot.send_message(message.chat.id, '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ–±—ã —è –º–æ–≥ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è üôÇ')
    if emp==2:
        global emp_id
        emp_id = message.text.strip()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è', reply_markup=markup)
    bot.register_next_step_handler(message, employee_areas)

def employee_areas(message):
    global emp_name
    emp_name=message.from_user.first_name
    global emp_adm_name
    if emp!=2:
        emp_name = message.text.strip()
    if emp==2:
        emp_adm_name = message.text.strip()

    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('‚ùå –í–µ–±-–¥–∏–∑–∞–π–Ω –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞')
    btn2 = types.KeyboardButton('‚ùå –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥')
    markup.row(btn1, btn2)
    btn3 = types.KeyboardButton('‚ùå –¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥')
    btn4 = types.KeyboardButton('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∞–π—Ç–æ–≤')
    markup.row(btn3, btn4)
    btn5 = types.KeyboardButton('‚ùå –í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂ –∏ –∞–Ω–∏–º–∞—Ü–∏—è')
    btn6 = types.KeyboardButton('‚ùå –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω')
    markup.row(btn5, btn6)
    btn7 = types.KeyboardButton('‚ùå –ü–µ—Ä–µ–≤–æ–¥—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è')
    btn8 = types.KeyboardButton('‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π')
    markup.row(btn7, btn8)



    btn9 = types.KeyboardButton('–î–∞–ª–µ–µ')
    markup.row(btn9)
    if emp==0:
        bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ, {emp_name}. –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –æ–±–ª–∞—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Ö–æ—Ç–µ–ª –±—ã —Ä–∞–±–æ—Ç–∞—Ç—å\n\n'
                                          f'1. –í–µ–±-–¥–∏–∑–∞–π–Ω –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤, –≤–µ—Ä—Å—Ç–∫–∞, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω, UI/UX –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è;\n\n'
                                          f'2. –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥: –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥–∞—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤, SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –±–ª–æ–≥–æ–≤ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π;\n\n'
                                          f'3. –¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, SEO, SMM, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞;\n\n'
                                          f'4. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∞–π—Ç–æ–≤: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö–æ—Å—Ç–∏–Ω–≥–æ–º, –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞;\n\n'
                                          f'5. –í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂ –∏ –∞–Ω–∏–º–∞—Ü–∏—è: —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –º–æ–Ω—Ç–∞–∂ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤, –∞–Ω–∏–º–∞—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤, —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç—ã;\n\n'
                                          f'6. –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–æ–≤, —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è, –±–∞–Ω–Ω–µ—Ä–æ–≤, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π;\n\n'
                                          f'7. –ü–µ—Ä–µ–≤–æ–¥—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è: –ø–∏—Å—å–º–µ–Ω–Ω—ã–π –∏ —É—Å—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥, –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã;\n\n'
                                          f'8. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π', reply_markup=markup)
    if emp==1:
        bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ, {emp_name}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–µ–º –æ–±–ª–∞—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω—ã —Å –≤–∞—à–∏–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º\n\n'
                                          f'1. –í–µ–±-–¥–∏–∑–∞–π–Ω –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤, –≤–µ—Ä—Å—Ç–∫–∞, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω, UI/UX –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è;\n\n'
                                          f'2. –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥: –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥–∞—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤, SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –±–ª–æ–≥–æ–≤ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π;\n\n'
                                          f'3. –¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, SEO, SMM, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞;\n\n'
                                          f'4. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∞–π—Ç–æ–≤: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö–æ—Å—Ç–∏–Ω–≥–æ–º, –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞;\n\n'
                                          f'5. –í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂ –∏ –∞–Ω–∏–º–∞—Ü–∏—è: —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –º–æ–Ω—Ç–∞–∂ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤, –∞–Ω–∏–º–∞—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤, —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç—ã;\n\n'
                                          f'6. –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–æ–≤, —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è, –±–∞–Ω–Ω–µ—Ä–æ–≤, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π;\n\n'
                                          f'7. –ü–µ—Ä–µ–≤–æ–¥—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è: –ø–∏—Å—å–º–µ–Ω–Ω—ã–π –∏ —É—Å—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥, –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã;\n\n'
                                          f'8. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π', reply_markup=markup)
    if emp==2:
        bot.send_message(message.chat.id, f'–•–æ—Ä–æ—à–æ, {message.from_user.first_name}. –°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ–º –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏', reply_markup=markup)
    bot.register_next_step_handler(message, employee_pick)

selected_areas = set()  # –°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π

def employee_pick(message):
    def toggle_area_selection(button_text):
        if button_text.startswith("‚úÖ"):
            return button_text.replace("‚úÖ", "‚ùå", 1)  # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ "‚úÖ" –Ω–∞ "‚ùå"
        elif button_text.startswith("‚ùå"):
            return button_text.replace("‚ùå", "‚úÖ", 1)  # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ "‚ùå" –Ω–∞ "‚úÖ"


    if message.text == "–î–∞–ª–µ–µ":
        global formatted_areas
        formatted_areas = format_areas()
        bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:\n{formatted_areas}")
        global area1,area2,area3,area4,area5,area6,area7,area8
        area1,area2,area3,area4,area5,area6,area7,area8=0,0,0,0,0,0,0,0
        if "–í–µ–±-–¥–∏–∑–∞–π–Ω –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" in formatted_areas:
            area1=1
        if "–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥" in formatted_areas:
            area2=1
        if "–¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥" in formatted_areas:
            area3=1
        if "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∞–π—Ç–æ–≤" in formatted_areas:
            area4=1
        if "–í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂ –∏ –∞–Ω–∏–º–∞—Ü–∏—è" in formatted_areas:
            area5=1
        if "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω" in formatted_areas:
            area6=1
        if "–ü–µ—Ä–µ–≤–æ–¥—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è" in formatted_areas:
            area7=1
        if "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π" in formatted_areas:
            area8=1

        if emp==0:
            conn = sqlite3.connect('bot_db.sql')
            cur = conn.cursor()
            cur.execute("DELETE FROM users")
            cur.execute(
                    "insert into users (id, name, area_1, area_2, area_3, area_4, area_5, area_6, area_7, area_8, zanatost, dlitelnost) "
                    "values ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')" % (
                    message.from_user.id, emp_name, area1, area2, area3, area4, area5, area6, area7, area8, 0, 0))
            conn.commit()
            cur.close()
            conn.close()


        # conn = sqlite3.connect('bot_db.sql')
        # cur = conn.cursor()
        # cur.execute('select* from users')
        # users=cur.fetchall()
        # info=''
        # for el in users:
        #     info+=f'Id: {el[0]}, \n–ò–º—è: {el[1]}, \n1:{el[2]},\n2:{el[3]},\n3:{el[4]},\n4:{el[5]},\n5:{el[6]},\n6:{el[7]},\n7:{el[8]},\n8:{el[9]},\n–ó–∞–Ω—è—Ç–æ—Å—Ç—å:{el[10]},\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:{el[11]}'
        # cur.close()
        # conn.close()
        # bot.send_message(message.chat.id,info)

        markup = types.ReplyKeyboardRemove(selective=False)

        employee_zanatost(message)
        return




    if message.text in area_buttons:
        button_text = area_buttons[message.text]
        button_text_with_status = toggle_area_selection(button_text)
        area_buttons.pop(message.text,None)
        area_buttons[button_text_with_status] = button_text_with_status

    markup = types.ReplyKeyboardMarkup()
    i=0
    for button_text in area_buttons.values():
        if i%2==0:
            btn1=types.KeyboardButton(button_text)
            i+=1
        else:
            btn2=types.KeyboardButton(button_text)
            markup.row(btn1, btn2)
            i+=1

    btn9 = types.KeyboardButton("–î–∞–ª–µ–µ")
    markup.row(btn9)
    bot.register_next_step_handler(message, employee_pick)
    if "–î–∞–ª–µ–µ" not in message.text:
        if emp==0:
            bot.send_message(message.chat.id,f"–û—Ç–ª–∏—á–Ω–æ, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å, —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–ª–∞—Å—Ç–µ–π\n\n"
                                             f"–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ‚úÖ –æ–±–ª–∞—Å—Ç–∏, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –î–ê–õ–ï–ï",reply_markup=markup)
        if emp==1:
            bot.send_message(message.chat.id,f"–û—Ç–ª–∏—á–Ω–æ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–ª–∞—Å—Ç–µ–π. "
                                             f"\n\n–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —É –í–∞—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Ö–æ—Ç—è –±—ã 1 –≤—ã–±—Ä–∞–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å\n\n"
                                             f"–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ‚úÖ –æ–±–ª–∞—Å—Ç–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –î–ê–õ–ï–ï",reply_markup=markup)

def format_areas():
    formatted_areas = ""
    for button_text, status in area_buttons.items():
        if status.startswith("‚úÖ"):
            formatted_areas += f"{button_text.replace('‚ùå ', '‚úÖ ')}\n"
    return formatted_areas

def employee_zanatost(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å')
    btn2 = types.KeyboardButton('–ß–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å')
    btn3 = types.KeyboardButton('–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞')
    markup.row(btn1, btn2, btn3)
    sent_message = bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –∑–∞–Ω—è—Ç–æ—Å—Ç—å—é üïí\n\n–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å: —Ä–∞–±–æ—Ç–∞ 8 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å, 5 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é;\n\n–ß–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å: '
                                                     '—Ä–∞–±–æ—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å –∏–ª–∏ –Ω–µ–¥–µ–ª—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, 4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å –∏–ª–∏ 20 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é;\n\n–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞: '
                                                     '—Ä–∞–±–æ—Ç–∞ –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –∑–∞–¥–∞–Ω–∏—è',reply_markup=markup)
    bot.register_next_step_handler(sent_message, zan_click)

def zan_click(message):
    global zanatost
    zanatost= message.text
    global zan
    if emp!=1:
        conn = sqlite3.connect('bot_db.sql')
        cur = conn.cursor()
        if message.text == '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å':
            zan=0
            if emp==0:
                cur.execute(f"update users set zanatost=0 where id={message.from_user.id}")
        elif message.text == '–ß–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å':
            zan=1
            if emp==0:
                cur.execute(f"update users set zanatost=1 where id={message.from_user.id}")
        elif message.text == '–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞':
            zan=2
            if emp==0:
                cur.execute(f"update users set zanatost=2 where id={message.from_user.id}")
        conn.commit()
        cur.close()
        conn.close()

    employee_dlitelnost(message)

def employee_dlitelnost(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞')
    btn2 = types.KeyboardButton('–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞')
    btn3 = types.KeyboardButton('–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞')
    markup.row(btn1, btn2, btn3)
    if emp==0:
        sent_message = bot.send_message(message.chat.id,'–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Ä–∞–±–æ—Ç—ã —Ç—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å üìÖ\n\n–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞: 1 –º–µ—Å—è—Ü, 2 –º–µ—Å—è—Ü–∞ –∏ —Ç.–¥;\n\n'
                                                        '–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞: –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç;\n\n–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞: –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ, '
                                                        '–±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', reply_markup=markup)
    if emp==1:
        sent_message = bot.send_message(message.chat.id,'–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –í—ã –∏—â–µ—Ç–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ üìÖ\n\n–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞: 1 –º–µ—Å—è—Ü, 2 –º–µ—Å—è—Ü–∞ –∏ —Ç.–¥;\n\n'
                                                        '–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞: –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç;\n\n–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞: –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ, '
                                                        '–±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', reply_markup=markup)
    if emp==2:
        sent_message = bot.send_message(message.chat.id,'–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∏—â—É—Ç —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ üìÖ', reply_markup=markup)
    bot.register_next_step_handler(sent_message, dlit_click)

def dlit_click(message):
    global dlitelnost
    dlitelnost=message.text
    global dlit
    if emp!=1:
        conn = sqlite3.connect('bot_db.sql')
        cur = conn.cursor()
        if message.text == '–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞':
            dlit=0
            if emp==0:
                cur.execute(f"update users set dlitelnost=0 where id={message.from_user.id}")
        elif message.text == '–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞':
            dlit=1
            if emp==0:
                cur.execute(f"update users set dlitelnost=1 where id={message.from_user.id}")
        elif message.text == '–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞':
            dlit=2
            if emp==0:
                cur.execute(f"update users set dlitelnost=2 where id={message.from_user.id}")
        conn.commit()
        cur.close()
        conn.close()

    if emp==0:
        emp_info(message)
    else:
        work_text(message)

def work_text(message):
    markup = types.ReplyKeyboardRemove(selective=False)
    if emp==1:
        sent_message=bot.send_message(message.chat.id, f'{emp_name}, –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–∞! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ üßæ', reply_markup=markup)
    if emp==2:
        sent_message=bot.send_message(message.chat.id, f'{message.from_user.first_name}, —Å—é–¥–∞ –Ω—É–∂–Ω–æ –∑–∞–Ω–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ üßæ', reply_markup=markup)
    bot.register_next_step_handler(sent_message, text_click)

def text_click(message):
    global w_text
    w_text = message.text

    work_contacts(message)

def work_contacts(message):
    if emp==1:
        sent_message=bot.send_message(message.chat.id, '–§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥: –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º, –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è üë§ ‚òéÔ∏è üì©')
    if emp==2:
        sent_message=bot.send_message(message.chat.id, '–§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥: –í–Ω–µ—Å–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§ ‚òéÔ∏è üì©')
    bot.register_next_step_handler(sent_message, contact_click)

def contact_click(message):
    global w_contact
    w_contact = message.text
    global current_datetime
    current_datetime = datetime.now()
    if emp==2:
        conn = sqlite3.connect('bot_db.sql')
        cur = conn.cursor()
        cur.execute(
            "insert into workers (id_emp, name, area_1, area_2, area_3, area_4, area_5, area_6, "
            "area_7, area_8, zanatost, dlitelnost, text, contacts,date_of_create) values ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')" % (
                emp_id, emp_adm_name, area1, area2, area3, area4, area5, area6, area7, area8, zan, dlit, w_text,
                w_contact,current_datetime)
        )
        conn.commit()
        cur.close()
        conn.close()

    work_info(message)

def work_info(message):
    markup = types.ReplyKeyboardMarkup()
    if emp==1:
        btn1 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º üíº')
        btn2 = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ üìù')
        markup.row(btn1)
        markup.row(btn2)
    if emp==2:
        btn1 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíº')
        btn2 = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ üìù')
        markup.row(btn1)
        markup.row(btn2)
    sent_message=bot.send_message(message.chat.id, f'{emp_name}, –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ! üìã\n\n'
                                      f'–í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:\n{formatted_areas}'
                                      f'\n–ó–∞–Ω—è—Ç–æ—Å—Ç—å: {zanatost}'
                                      f'\n–ñ–µ–ª–∞–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {dlitelnost}',reply_markup=markup)

    bot.send_message(message.chat.id, f'–¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:\n{w_text}')
    bot.send_message(message.chat.id, f'–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏:\n{w_contact}')

    bot.register_next_step_handler(sent_message, final_check_work)

def final_check_work(message):
    if message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ üìù':
        main(message)
    elif message.text=='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º üíº':
        bot.send_message(adm_id,'–ù–û–í–û–ï –û–ë–™–Ø–í–õ–ï–ù–ò–ï!')
        bot.send_message(adm_id,f'Id: {message.from_user.id}'
                         f'\n–ò–º—è: {emp_name}'
                                   f'\n–í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:\n{formatted_areas}'
                                      f'\n–ó–∞–Ω—è—Ç–æ—Å—Ç—å: {zanatost}'
                                      f'\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {dlitelnost}')
        bot.send_message(adm_id,f'–¢–µ–∫—Å—Ç:\n{w_text}'
                                   f'\n\n–ö–æ–Ω—Ç–∞–∫—Ç—ã:\n{w_contact}')



        bot.send_message(message.chat.id,'–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º üì©'
                                         '\n\n–¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ, –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π')
        main(message)
    if ((message.text=='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíº') and (emp==2)):
        conn = sqlite3.connect('bot_db.sql')
        cur = conn.cursor()
        cur.execute("drop view new_ad_notification")
        cur.execute(
            "CREATE VIEW new_ad_notification AS SELECT id FROM users WHERE (((area_1 = 1 AND %s = 1) OR"
            "(area_2 = 1 AND %s = 1) OR"
            "(area_3 = 1 AND %s = 1) OR"
            "(area_4 = 1 AND %s = 1) OR"
            "(area_5 = 1 AND %s = 1) OR"
            "(area_6 = 1 AND %s = 1) OR"
            "(area_7 = 1 AND %s = 1) OR"
            "(area_8 = 1 AND %s = 1)) AND zanatost = %s AND dlitelnost = %s)"
            % (area1, area2, area3, area4, area5, area6, area7, area8, zan, dlit)
        )
        cur.execute('select* from workers')
        workers=cur.fetchall()
        info=''
        for el in workers:
            info+=(f'Id: {el[1]}, \n–ò–º—è: {el[2]}, \n1:{el[3]},\n2:{el[4]},\n3:{el[5]},\n4:{el[6]},'
                   f'\n5:{el[7]},\n6:{el[8]},\n7:{el[9]},\n8:{el[10]},\n–ó–∞–Ω—è—Ç–æ—Å—Ç—å:{el[11]},\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:{el[12]}\n–¢–µ–∫—Å—Ç:{el[13]},\n–ö–æ–Ω—Ç–∞–∫—Ç—ã:{el[14]},\n–í—Ä–µ–º—è:{el[15]}\n\n')

        notification_users = cur.execute("SELECT id FROM new_ad_notification").fetchall()
        for user_id in notification_users:
            ad_text = w_text
            send_ad_to_user(user_id[0], ad_text)
            schedule.run_pending()
            time.sleep(1)
        cur.close()
        conn.close()
        bot.send_message(message.chat.id,info)
        main(message)


def emp_info(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ò—Å–∫–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è üíº')
    btn2 = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ üìù')
    markup.row(btn1)
    markup.row(btn2)


@bot.message_handler(func=lambda message: message.text == '–ò—Å–∫–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è üíº')
def final_check_user(message):
    global user_id
    user_id = message.from_user.id  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    notification_mode(user_id)


def notification_mode(user_id):
    conn = sqlite3.connect('bot_db.sql')
    cur = conn.cursor()
    cur.execute("drop view user_ads")
    cur.execute(
        "CREATE VIEW user_ads AS SELECT workers.id_emp AS user_id, workers.text AS ad_text FROM workers JOIN users ON ((users.area_1 = 1 AND workers.area_1 = 1) OR"
        "(users.area_2 = 1 AND workers.area_2 = 1) OR"
        "(users.area_3 = 1 AND workers.area_3 = 1) OR"
        "(users.area_4 = 1 AND workers.area_4 = 1) OR"
        "(users.area_5 = 1 AND workers.area_5 = 1) OR"
        "(users.area_6 = 1 AND workers.area_6 = 1) OR"
        "(users.area_7 = 1 AND workers.area_7 = 1) OR"
        "(users.area_8 = 1 AND workers.area_8 = 1)) WHERE users.zanatost = workers.zanatost AND users.dlitelnost = workers.dlitelnost;")
    conn.commit()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
    ads = cur.execute("SELECT ad_text FROM user_ads").fetchall()
    #cur.execute("SELECT * FROM user_ads")
    for ad in ads:
        ad_text = ad[0]
        #bot.send_message(user_id,f'{ad_text}')
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        #schedule.every(1).minutes.do(send_ad_to_user, user_id, ad_text)
        send_ad_to_user(user_id,ad_text)
        schedule.run_pending()
        time.sleep(5)

    cur.close()
    conn.close()

def send_ad_to_user(user_id, ad_text):
    bot.send_message(user_id, ad_text)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    schedule.every().day.at("02:00").do(delete_old_records)

    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
    #while True:
    #    schedule.run_pending()
    #    time.sleep(1)

def delete_old_records():
    conn = sqlite3.connect('bot_db.sql')
    #cur = conn.cursor()

    current_datetime = datetime.now()
    #print(datetime.now())
    #two_weeks_ago = current_datetime - timedelta(weeks=2)
    #two_weeks_ago = current_datetime - timedelta(seconds=30)

    #cur.execute("DELETE FROM workers WHERE date_of_create < DATE_SUB(NOW(), INTERVAL 3 MINUTE)")

    conn.commit()
    conn.close()

@bot.message_handler(func=lambda message: message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ üìù')
def zanovo(message):
    if emp==0:
        conn = sqlite3.connect('bot_db.sql')
        cur = conn.cursor()
        cur.execute(f"delete from users where id={message.from_user.id}")
        conn.commit()
        cur.close()
        conn.close()
    main(message)

bot.polling(none_stop=True)

